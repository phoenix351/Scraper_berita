# -*- coding: utf-8 -*-
"""scraper_republika.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/10b2Q7XpYpERjQzDlWI1XhTda5LVYUbPU
"""

import scrapy
try:
    from urllib.parse import urljoin
except ImportError:
     from urlparse import urljoin
from re import search
from datetime import date
from berita.items import BeritaItem

class Republika_scraper(scrapy.Spider):
    name = "repu_spider"
    tanggal = date.today().strftime("%Y/%m/%d")
    start_urls = ['https://www.republika.co.id/index/'+tanggal]
    ihal = 40

    @staticmethod
    def clean(s):
        ax = ""
        for a in s.split(" "):
            try:
                ax = ax + " " + search(r'\w+', a).group()
            except AttributeError:
                continue
        return ax

    def parse(self, response):
        konten_selektor = 'div.left_ib_right div.set_subkanal'
        for konten in response.css(konten_selektor):
            link_selector = 'a ::attr(href)'
            link = konten.css(link_selector).extract_first()
            url = urljoin(response.url, link)
            yield scrapy.Request(url, callback=self.parse_artikel)
        next_page = 'https://republika.co.id/index/2019/12/18/' + str(self.ihal)
        if response.css(konten_selektor):
            next_href = next_page
            next_page_url = next_href
            self.ihal = self.ihal + 40
            request = scrapy.Request(url=next_page_url)
            yield request

    def parse_artikel(self, response):

        penulis_selector = '.by ::text'
        judul_selector = 'h1 ::text'
        tanggal_selector = '.date_detail ::text'
        isi_selector = '.artikel ::text'
        penulis = ' '.join(response.css(penulis_selector).getall())
        judul = ' '.join(response.css(judul_selector).getall())
        tanggal = response.css(tanggal_selector).extract_first()
        isi = ' '.join(response.css(isi_selector).getall())

        penulis = self.clean(penulis)
        judul = self.clean(judul)
        isi = self.clean(judul)

        berita = BeritaItem()
        berita['judul'] = judul
        berita['penulis'] = penulis
        berita['isi_artikel'] = isi
        berita['tanggal'] = tanggal

        yield berita